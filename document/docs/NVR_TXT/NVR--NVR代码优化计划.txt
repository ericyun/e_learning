NVR代码优化计划
联网抓图，可以在硬盘管理部分加大rec_buf，这样，大多数的图片都不需要从硬盘读取了。
     AutoSnapJpgSend 函数需要做好流量控制，每秒最多多大流量的图片上传可控；远端的话，流量绝对要控制的低些。
自己定义一个新的sleep函数，使用自定义的全局变量和队列来控制。LIVE555的HASH可以的。

解码器版本，不要开启硬盘检测，太浪费启动时间了。
时间管理问题，     GetMsOfDayNow Get10MsCounter 等，需要更好的方式来实现，现在不准确。
      可以考虑，休眠10ms，然后获取当前时间，然后根据与开始时间的差，判断timer的counter。系统时间更改的时候，同步修正。

HISI由于资源限制，不能支持主码流抓图；可以通过上层应用做限制，如果支持5M，那么必须有子码流才能抓图；如果不需要5M支持，那么可以支持主码流抓图。

系统维护窗口，恢复出厂设置，应该增加选项，至少可以保留原有的IP地址，或者可以直接设定好重启后的一些参数，不再完全依赖于重启后的配置。缺省什么都不设置，就和以前一样。

如果需要录像切片功能，可以考虑子码流全录像的方式，占用资源应该不多。子码流中发现可疑画面，取主码流分析的方法也应该考虑。
增加一条新的日志，可以自定义写入字符内容的，方便紧急测试用。

/~~~~~~~~~~~~~~~~~~~~~~~~~~ 模块化设计 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
version,可以单独拉出来作为release文件，版本信息从这个文件中读取，而不是代码中写死，可以自动生成。
网络键盘之类的外部应用，可以考虑使用单独的应用程序，envrruby接收外部的键盘消息并且做出处理就是了。
扩展的IPC等功能库，不应该使用全局的宏和数据结构，否则需要重新编译；中间通过函数传递控制和参数信息。动态分配数据结构。

/~~~~~~~~~~~~~~~~~~~~~~~~~~ NVR参数管理 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

/~~~~~~~~~~~~~~~~~~~~~~~~~~ NVR预览效果测试与客户体验 ~~~~~~~~~~~~~~~~~~~/
关于客户DEMO的建议，客户能直观感受到的就是预览的效果
比较对象：
     1. PC上使用VLC连接IPC播放,或者其他工具     2. PC上使用厂商的IE浏览器连接IPC播放     3. HIKON或者其他厂商的NVR
比较我们的NVR的预览效果，VLC的 效果，IPC的IE浏览器效果，HIKON的NVR的效果。看看我们有任何的不足
比较的效果     1. 视频延时时间比较     2. 视频卡顿现象的比较     3. 视频闪烁现象的比较

比较的时候，应该尽量保证同等条件
     1. 相等大小的显示器，大些的显示器更容易看出不足。     2. 置于同一个网络环境，对相同的IPC比较     3. 比较公路上汽车电瓶车

或者模拟一个类似的场景，比如转圈飞行的玩具飞机。开发的时候，尽量能够模拟出来汽车高速移动的情况，不然现有的测试太不方便了。抓包下来，然后播放出来。
多选择几家IPC做比较测试，如果发现我们NVR视频处理有所不足，及时改进；如果我们表现优秀，可以做DEMO演示给客户。

/~~~~~~~~~~~~~~~~~~~~~~~~~~ NVR存储机制 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
硬盘格式化慢的问题：
     1，不使用文件系统，直接修改数据。
     2，FAT表在实际使用到文件的时候再初始化，也就是open文件的时候如果INDEX中该文件标示为未初始化再初始化之。

/~~~~~~~~~~~~~~~~~~~~~~~~~~ NVR代码小优化 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
     1. MainCtrlSetBusyFlag(TRUE); 的机制，需要变更的。
     2. 格式化硬盘， 网络，录像 可能存在3个线程，需要考虑好保护。
     3. 唤醒多块硬盘时的时间需要缩短。
     4. 预录文件应该也要检测错误，并且做出规避的处理。
/~~~~~~~~~~~~~~~~~~~~~~~~~~ NVR多进程机制 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
     1. 各种GUI事件或者内部事件的处理机制，就是现有的GUI2中窗口处理文件。
     2. 中心进程，做参数管理，做设备管理，做解码显示。驱动所有的线程都是在这个进程中。
         有个问题，报警等是下层驱动上报的，相关的处理需要界面处理，需要处理好关系。
     3. 网络进程，管理所有的IPC，GB28181等。MEMPOOL应该在这个进程中。
     4. 录像进程，管理硬盘和多种存储设备。硬盘的后续读取等操作，硬盘应该是驱动级别的吧？需要在解码器所在进程中访问么？
     5. 进程之间调试接口，要完整的定义，如果某个进程死掉，可以快速定位问题所在。进程之间调试接口，要完整的定义，如果某个进程死掉，可以快速定位问题所在。

